import dependencies.*

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.secrets_gradle_plugin' version '0.5'

}

android {
    compileSdkVersion Versions.compileSdk

    defaultConfig {
        applicationId "com.openclassrooms.realestatemanager"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.openclassrooms.realestatemanager.repository.HiltTestRunner"
    }

    buildFeatures {
        //compose true
        dataBinding true
        viewBinding true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = Versions.jvmTarget
        useIR = true
    }
//    composeOptions {
//        def kotlin_compiler_version = Versions.kotlin
//        kotlinCompilerVersion kotlin_compiler_version
//
//        def kotlin_compiler_extension_version = Versions.kotlin_compiler_extension
//        kotlinCompilerExtensionVersion kotlin_compiler_extension_version
//    }
    packagingOptions {
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation AndroidX.core_ktx
    implementation AndroidX.app_compat
    implementation AndroidX.constraint_layout
    implementation AndroidX.nav_fragment_ktx
    implementation AndroidX.nav_ui_ktx
    implementation AndroidX.navigation_fragment_ktx
    implementation AndroidX.navigation_ui_ktx
    implementation AndroidX.sliding_panel_layout


//    implementation AndroidX.compose_ui
//    implementation AndroidX.compose_foundation
//    implementation AndroidX.compose_material
//    implementation AndroidX.compose_icons_core
//    implementation AndroidX.compose_icons_extended
  //  implementation AndroidX.navigation_compose
    implementation AndroidX.navigation_hilt
    implementation AndroidX.room_runtime
    implementation AndroidX.room_ktx
    implementation AndroidX.datastore
    implementation AndroidX.hilt_lifecycle_viewmodel
    implementation AndroidX.recycler_view
    implementation AndroidX.activity

    implementation Google.material
    implementation Google.hilt_android

    implementation Glide.glide
    implementation("io.coil-kt:coil:1.2.1")

    implementation Jetbrains.kotlin_stdlib

    implementation Square.retrofit
    implementation Square.retrofit_gson
    implementation Square.okHttp
    implementation Square.leak_canary

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"


    //Firebase
    implementation Firebase.firebase_auth
    implementation Firebase.firebase_auth_ui
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.test:monitor:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'

    // Concurrency
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //Timber for easier Logs
    def timberVersion = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timberVersion"

    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'junit:junit:4.13.2'

    kapt AnnotationProcessing.hilt_compiler
    //kapt AnnotationProcessing.compose_compiler
    kapt AnnotationProcessing.glide_compiler
    kapt AnnotationProcessing.room_compiler

    //mock
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.11.0'

    // TESTING
    testImplementation UnitTest.jupiter_api
    testImplementation UnitTest.jupiter_params
    testRuntimeOnly UnitTest.jupiter_engine

    // Mock web server
    testImplementation UnitTest.mock_web_server
    testImplementation UnitTest.okHttp

    // compose testing
    //implementation InstrumentationTest.compose_ui

    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.3.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:3.8.0'

    // Testing Dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    androidTestImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    androidTestImplementation "org.mockito:mockito-android:2.28.2"
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // Optional -- UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0-RC'

    //Hilt
    // For Robolectric tests.
    testImplementation 'com.google.dagger:hilt-android-testing:2.35'
    // ...with Kotlin.
    kaptTest 'com.google.dagger:hilt-android-compiler:2.35'
    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.35'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.35'
}
secrets {
    // Optionally specify a different file name containing your secrets.
    // The plugin defaults to "local.properties"

    // Add keys that the plugin should ignore from the properties file
    ignoreList.add("keyToIgnore")
    ignoreList.add("ignore*")
}